(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{341:function(e,t,r){"use strict";r.r(t);var s=r(0),a=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"event-driven-application"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#event-driven-application"}},[e._v("#")]),e._v(" Event driven application")]),e._v(" "),t("p",[e._v("Many applications listen to multiple "),t("Term",{attrs:{term:"event"}}),e._v(" sources, update the state of correspondent business entities,\nand have to execute actions if some state is reached.\nCadence is a good fit for many of these. It has direct support for asynchronous "),t("Term",{attrs:{term:"event",show:"events"}}),e._v(" (aka "),t("Term",{attrs:{term:"signal",show:"signals"}}),e._v("),\nhas a simple programming model that obscures a lot of complexity\naround state persistence, and ensures external action execution through built-in retries.")],1),e._v(" "),t("p",[e._v("Real-world examples:")]),e._v(" "),t("ul",[t("li",[e._v("Fraud detection where "),t("Term",{attrs:{term:"workflow"}}),e._v(" reacts to "),t("Term",{attrs:{term:"event",show:"events"}}),e._v(" generated by consumer behavior")],1),e._v(" "),t("li",[e._v("Customer loyalty program where the "),t("Term",{attrs:{term:"workflow"}}),e._v(" accumulates reward points and applies them when requested")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);