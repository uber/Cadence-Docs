(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{336:function(e,t,a){"use strict";a.r(t);var r=a(0),o=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),t("p",[e._v("A large number of use cases span beyond a single request-reply, require tracking\nof a complex state, respond to asynchronous "),t("Term",{attrs:{term:"event",show:"events"}}),e._v(", and communicate to external unreliable dependencies.\nThe usual approach to building such applications is a hodgepodge of stateless services,\ndatabases, cron jobs, and queuing systems. This negatively impacts the developer productivity as most of the code is\ndedicated to plumbing, obscuring the actual business logic behind a myriad of low-level details. Such systems frequently have availability problems as it is hard to keep all the components healthy.")],1),e._v(" "),t("p",[e._v("The Cadence solution is a "),t("a",{attrs:{href:"/docs/concepts/workflows"}},[t("em",[e._v("fault-oblivious stateful")]),e._v(" programming model")]),e._v(" that obscures most of the complexities of building scalable distributed applications. In essence, Cadence provides a durable virtual memory that is not\nlinked to a specific process, and preserves the full application state, including function stacks, with local variables across all sorts of host and software failures.\nThis allows you to write code using the full power of a programming language while Cadence takes care of durability, availability, and scalability of the application.")]),e._v(" "),t("p",[e._v("Cadence consists of a programming framework (or client library) and a managed service (or backend).\nThe framework enables developers to author and coordinate "),t("Term",{attrs:{term:"task",show:"tasks"}}),e._v(" in familiar languages\n("),t("a",{attrs:{href:"https://github.com/uber-go/cadence-client/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Go"),t("OutboundLink")],1),e._v(" and "),t("a",{attrs:{href:"https://github.com/uber/cadence-java-client",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java"),t("OutboundLink")],1),e._v("\nare supported officially, and "),t("a",{attrs:{href:"https://github.com/firdaus/cadence-python",target:"_blank",rel:"noopener noreferrer"}},[e._v("Python"),t("OutboundLink")],1),e._v(" and\n"),t("a",{attrs:{href:"https://github.com/coinbase/cadence-ruby",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ruby"),t("OutboundLink")],1),e._v(" by the community).")],1),e._v(" "),t("p",[e._v("You can also use "),t("a",{attrs:{href:"https://github.com/indeedeng/iwf",target:"_blank",rel:"noopener noreferrer"}},[e._v("iWF"),t("OutboundLink")],1),e._v(" as a DSL framework on top of Cadence.")]),e._v(" "),t("p",[e._v("The Cadence backend service is stateless and relies on a persistent store. Currently, Cassandra and MySQL/Postgres storages\nare supported. An adapter to any other database that provides multi-row single shard transactions\ncan be added. There are different service deployment models. At Uber, our team operates multitenant clusters\nthat are shared by hundreds of applications. See service "),t("a",{attrs:{href:"/docs/concepts/topology"}},[e._v("topology")]),e._v(" to understand the overall architecture. The GitHub repo for the Cadence server is "),t("a",{attrs:{href:"https://github.com/uber/cadence",target:"_blank",rel:"noopener noreferrer"}},[e._v("uber/cadence"),t("OutboundLink")],1),e._v(". The docker\nimage for the Cadence server is available on Docker Hub at\n"),t("a",{attrs:{href:"https://hub.docker.com/r/ubercadence/server",target:"_blank",rel:"noopener noreferrer"}},[e._v("ubercadence/server"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"what-s-next"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-s-next"}},[e._v("#")]),e._v(" What's Next")]),e._v(" "),t("p",[e._v("Let's try with some sample workflows.\nTo start with, go to "),t("a",{attrs:{href:"/docs/get-started/installation"}},[e._v("server installation")]),e._v(" to install cadence locally, and run a HelloWorld sample with "),t("a",{attrs:{href:"/docs/get-started/java-hello-world"}},[e._v("Java")]),e._v(" or "),t("a",{attrs:{href:"/docs/get-started/golang-hello-world"}},[e._v("Golang")]),e._v(".")]),e._v(" "),t("p",[e._v("When you have any trouble with the instructions, you can watch the "),t("a",{attrs:{href:"/docs/get-started/video-tutorials"}},[e._v("video tutorials")]),e._v(", and reach out to us on "),t("a",{attrs:{href:"http://t.uber.com/cadence-slack",target:"_blank",rel:"noopener noreferrer"}},[e._v("Slack Channel"),t("OutboundLink")],1),e._v(", or raise any question on "),t("a",{attrs:{href:"https://stackoverflow.com/questions/tagged/cadence-workflow",target:"_blank",rel:"noopener noreferrer"}},[e._v("StackOverflow"),t("OutboundLink")],1),e._v(" or open an "),t("a",{attrs:{href:"https://github.com/uber/cadence/issues/new/choose",target:"_blank",rel:"noopener noreferrer"}},[e._v("Github issue"),t("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=o.exports}}]);