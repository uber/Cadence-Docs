(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{387:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"signals"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#signals"}},[t._v("#")]),t._v(" Signals")]),t._v(" "),a("p",[a("Term",{attrs:{term:"signal",show:"Signals"}}),t._v(" provide a mechanism to send data directly to a running "),a("Term",{attrs:{term:"workflow"}}),t._v(". Previously, you had\ntwo options for passing data to the "),a("Term",{attrs:{term:"workflow"}}),t._v(" implementation:")],1),t._v(" "),a("ul",[a("li",[t._v("Via start parameters")]),t._v(" "),a("li",[t._v("As return values from "),a("Term",{attrs:{term:"activity",show:"activities"}})],1)]),t._v(" "),a("p",[t._v("With start parameters, we could only pass in values before "),a("Term",{attrs:{term:"workflow_execution"}}),t._v(" began.")],1),t._v(" "),a("p",[t._v("Return values from "),a("Term",{attrs:{term:"activity",show:"activities"}}),t._v(" allowed us to pass information to a running "),a("Term",{attrs:{term:"workflow"}}),t._v(", but this\napproach comes with its own complications. One major drawback is reliance on polling. This means\nthat the data needs to be stored in a third-party location until it's ready to be picked up by\nthe "),a("Term",{attrs:{term:"activity"}}),t._v(". Further, the lifecycle of this "),a("Term",{attrs:{term:"activity"}}),t._v(" requires management, and the "),a("Term",{attrs:{term:"activity"}}),t._v("\nrequires manual restart if it fails before acquiring the data.")],1),t._v(" "),a("p",[a("Term",{attrs:{term:"signal",show:"Signals"}}),t._v(", on the other hand, provide a fully asynchronous and durable mechanism for providing data to\na running "),a("Term",{attrs:{term:"workflow"}}),t._v(". When a "),a("Term",{attrs:{term:"signal"}}),t._v(" is received for a running "),a("Term",{attrs:{term:"workflow"}}),t._v(", Cadence persists the "),a("Term",{attrs:{term:"event"}}),t._v("\nand the payload in the "),a("Term",{attrs:{term:"workflow"}}),t._v(" history. The "),a("Term",{attrs:{term:"workflow"}}),t._v(" can then process the "),a("Term",{attrs:{term:"signal"}}),t._v(" at any time\nafterwards without the risk of losing the information. The "),a("Term",{attrs:{term:"workflow"}}),t._v(" also has the option to stop\nexecution by blocking on a "),a("Term",{attrs:{term:"signal"}}),t._v(" channel.")],1),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" signalVal "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\nsignalChan "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" workflow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetSignalChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" signalName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ns "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" workflow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddReceive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signalChan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c workflow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" more "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Receive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("signalVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    workflow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetLogger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Received signal!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" zap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"signal"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" signalName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" zap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" signalVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Select")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signalVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" signalVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SOME_VALUE"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" errors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"signalVal"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("In the example above, the "),a("Term",{attrs:{term:"workflow"}}),t._v(" code uses "),a("strong",[t._v("workflow.GetSignalChannel")]),t._v(" to open a\n"),a("strong",[t._v("workflow.Channel")]),t._v(" for the named "),a("Term",{attrs:{term:"signal"}}),t._v(". We then use a "),a("strong",[t._v("workflow.Selector")]),t._v(" to wait on this\nchannel and process the payload received with the "),a("Term",{attrs:{term:"signal"}}),t._v(".")],1),t._v(" "),a("h2",{attrs:{id:"signalwithstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#signalwithstart"}},[t._v("#")]),t._v(" SignalWithStart")]),t._v(" "),a("p",[t._v("You may not know if a "),a("Term",{attrs:{term:"workflow"}}),t._v(" is running and can accept a "),a("Term",{attrs:{term:"signal"}}),t._v(". The\n"),a("a",{attrs:{href:"https://godoc.org/go.uber.org/cadence/client#Client",target:"_blank",rel:"noopener noreferrer"}},[t._v("client.SignalWithStartWorkflow"),a("OutboundLink")],1),t._v(" API\nallows you to send a "),a("Term",{attrs:{term:"signal"}}),t._v(" to the current "),a("Term",{attrs:{term:"workflow"}}),t._v(" instance if one exists or to create a new\nrun and then send the "),a("Term",{attrs:{term:"signal"}}),t._v(". "),a("code",[t._v("SignalWithStartWorkflow")]),t._v(" therefore doesn't take a "),a("Term",{attrs:{term:"run_ID"}}),t._v(" as a\nparameter.")],1)])}),[],!1,null,null,null);a.default=e.exports}}]);