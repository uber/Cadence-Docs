(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{380:function(t,e,a){"use strict";a.r(e);var n=a(0),s=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"creating-workflows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-workflows"}},[t._v("#")]),t._v(" Creating workflows")]),t._v(" "),e("p",[t._v("The "),e("Term",{attrs:{term:"workflow"}}),t._v(" is the implementation of the coordination logic. The Cadence programming framework\n(aka client library) allows you to write the "),e("Term",{attrs:{term:"workflow"}}),t._v(" coordination logic as simple procedural code\nthat uses standard Go data modeling. The client library takes care of the communication between\nthe "),e("Term",{attrs:{term:"worker"}}),t._v(" service and the Cadence service, and ensures state persistence between "),e("Term",{attrs:{term:"event",show:"events"}}),t._v(" even in\ncase of "),e("Term",{attrs:{term:"worker"}}),t._v(" failures. Furthermore, any particular execution is not tied to a particular "),e("Term",{attrs:{term:"worker"}}),t._v("\nmachine. Different steps of the coordination logic can end up executing on different "),e("Term",{attrs:{term:"worker"}}),t._v("\ninstances, with the framework ensuring that the necessary state is recreated on the "),e("Term",{attrs:{term:"worker"}}),t._v(" executing\nthe step.")],1),t._v(" "),e("p",[t._v("However, in order to facilitate this operational model, both the Cadence programming framework and\nthe managed service impose some requirements and restrictions on the implementation of the\ncoordination logic. The details of these requirements and restrictions are described in the\n"),e("strong",[t._v("Implementation")]),t._v(" section below.")]),t._v(" "),e("h2",{attrs:{id:"overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),e("p",[t._v("The sample code below shows a simple implementation of a "),e("Term",{attrs:{term:"workflow"}}),t._v(" that executes one "),e("Term",{attrs:{term:"activity"}}),t._v(". The\n"),e("Term",{attrs:{term:"workflow"}}),t._v(" also passes the sole parameter it receives as part of its initialization as a parameter\nto the "),e("Term",{attrs:{term:"activity"}}),t._v(".")],1),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" sample\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go.uber.org/cadence/workflow"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    workflow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Register")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SimpleWorkflow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("SimpleWorkflow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx workflow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ao "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" workflow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ActivityOptions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        TaskList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("               "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sampleTaskList"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        ScheduleToCloseTimeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        ScheduleToStartTimeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        StartToCloseTimeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        HeartbeatTimeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        WaitForCancellation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    ctx "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workflow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("WithActivityOptions")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ao"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    future "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" workflow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ExecuteActivity")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SimpleActivity"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" future"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" err\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    workflow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetLogger")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Info")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Done"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" zap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"result"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"declaration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#declaration"}},[t._v("#")]),t._v(" Declaration")]),t._v(" "),e("p",[t._v("In the Cadence programing model, a "),e("Term",{attrs:{term:"workflow"}}),t._v(" is implemented with a function. The function declaration\nspecifies the parameters the "),e("Term",{attrs:{term:"workflow"}}),t._v(" accepts as well as any values it might return.")],1),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("SimpleWorkflow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx workflow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n")])])]),e("p",[t._v("Let’s deconstruct the declaration above:")]),t._v(" "),e("ul",[e("li",[t._v("The first parameter to the function is "),e("strong",[t._v("ctx workflow.Context")]),t._v(". This is a required parameter for\nall "),e("Term",{attrs:{term:"workflow"}}),t._v(" functions and is used by the Cadence client library to pass execution context.\nVirtually all the client library functions that are callable from the "),e("Term",{attrs:{term:"workflow"}}),t._v(" functions require\nthis "),e("strong",[t._v("ctx")]),t._v(" parameter. This "),e("strong",[t._v("context")]),t._v(" parameter is the same concept as the standard\n"),e("strong",[t._v("context.Context")]),t._v(" provided by Go. The only difference between "),e("strong",[t._v("workflow.Context")]),t._v(" and\n"),e("strong",[t._v("context.Context")]),t._v(" is that the "),e("strong",[t._v("Done()")]),t._v(" function in "),e("strong",[t._v("workflow.Context")]),t._v(" returns\n"),e("strong",[t._v("workflow.Channel")]),t._v(" instead the standard go "),e("strong",[t._v("chan")]),t._v(".")],1),t._v(" "),e("li",[t._v("The second parameter, "),e("strong",[t._v("string")]),t._v(", is a custom "),e("Term",{attrs:{term:"workflow"}}),t._v(" parameter that can be used to pass data\ninto the "),e("Term",{attrs:{term:"workflow"}}),t._v(" on start. A "),e("Term",{attrs:{term:"workflow"}}),t._v(" can have one or more such parameters. All parameters to a\n"),e("Term",{attrs:{term:"workflow"}}),t._v(" function must be serializable, which essentially means that params can’t be channels,\nfunctions, variadic, or unsafe pointers.")],1),t._v(" "),e("li",[t._v("Since it only declares error as the return value, this means that the "),e("Term",{attrs:{term:"workflow"}}),t._v(" does not return a\nvalue. The "),e("strong",[t._v("error")]),t._v(" return value is used to indicate an error was encountered during execution\nand the "),e("Term",{attrs:{term:"workflow"}}),t._v(" should be terminated.")],1)]),t._v(" "),e("h2",{attrs:{id:"implementation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[t._v("#")]),t._v(" Implementation")]),t._v(" "),e("p",[t._v("In order to support the synchronous and sequential programming model for the "),e("Term",{attrs:{term:"workflow"}}),t._v("\nimplementation, there are certain restrictions and requirements on how the "),e("Term",{attrs:{term:"workflow"}}),t._v(" implementation\nmust behave in order to guarantee correctness. The requirements are that:")],1),t._v(" "),e("ul",[e("li",[t._v("Execution must be deterministic")]),t._v(" "),e("li",[t._v("Execution must be idempotent")])]),t._v(" "),e("p",[t._v("A straightforward way to think about these requirements is that the "),e("Term",{attrs:{term:"workflow"}}),t._v(" code is as follows:")],1),t._v(" "),e("ul",[e("li",[e("Term",{attrs:{term:"workflow",show:"Workflow"}}),t._v(" code can only read and manipulate local state or state received as return values from\nCadence client library functions.")],1),t._v(" "),e("li",[e("Term",{attrs:{term:"workflow",show:"Workflow"}}),t._v(" code should not affect changes in external systems other than through invocation\nof "),e("Term",{attrs:{term:"activity",show:"activities"}}),t._v(".")],1),t._v(" "),e("li",[e("Term",{attrs:{term:"workflow",show:"Workflow"}}),t._v(" code should interact with "),e("strong",[t._v("time")]),t._v(" only through the functions provided by the Cadence\nclient library (i.e. "),e("strong",[t._v("workflow.Now()")]),t._v(", "),e("strong",[t._v("workflow.Sleep()")]),t._v(").")],1),t._v(" "),e("li",[e("Term",{attrs:{term:"workflow",show:"Workflow"}}),t._v(" code should not create and interact with goroutines directly, it should instead use the\nfunctions provided by the Cadence client library (i.e., "),e("strong",[t._v("workflow.Go()")]),t._v(" instead of "),e("strong",[t._v("go")]),t._v(",\n"),e("strong",[t._v("workflow.Channel")]),t._v(" instead of "),e("strong",[t._v("chan")]),t._v(", "),e("strong",[t._v("workflow.Selector")]),t._v(" instead of "),e("strong",[t._v("select")]),t._v(").")],1),t._v(" "),e("li",[e("Term",{attrs:{term:"workflow",show:"Workflow"}}),t._v(" code should do all logging via the logger provided by the Cadence client library\n(i.e., "),e("strong",[t._v("workflow.GetLogger()")]),t._v(").")],1),t._v(" "),e("li",[e("Term",{attrs:{term:"workflow",show:"Workflow"}}),t._v(" code should not iterate over maps using range because the order of map iteration is randomized.")],1)]),t._v(" "),e("p",[t._v("Now that we have laid the ground rules, we can take a look at some of the special functions and types\nused for writing Cadence "),e("Term",{attrs:{term:"workflow",show:"workflows"}}),t._v(" and how to implement some common patterns.")],1),t._v(" "),e("h3",{attrs:{id:"special-cadence-client-library-functions-and-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#special-cadence-client-library-functions-and-types"}},[t._v("#")]),t._v(" Special Cadence client library functions and types")]),t._v(" "),e("p",[t._v("The Cadence client library provides a number of functions and types as alternatives to some native\nGo functions and types. Usage of these replacement functions/types is necessary in order to ensure\nthat the "),e("Term",{attrs:{term:"workflow"}}),t._v(" code execution is deterministic and repeatable within an execution context.")],1),t._v(" "),e("p",[t._v("Coroutine related constructs:")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("workflow.Go")]),t._v(" : This is a replacement for the the "),e("strong",[t._v("go")]),t._v(" statement.")]),t._v(" "),e("li",[e("strong",[t._v("workflow.Channel")]),t._v(" : This is a replacement for the native "),e("strong",[t._v("chan")]),t._v(" type. Cadence provides\nsupport for both buffered and unbuffered channels.")]),t._v(" "),e("li",[e("strong",[t._v("workflow.Selector")]),t._v(" : This is a replacement for the "),e("strong",[t._v("select")]),t._v(" statement.")])]),t._v(" "),e("p",[t._v("Time related functions:")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("workflow.Now()")]),t._v(" : This is a replacement for "),e("strong",[t._v("time.Now()")]),t._v(".")]),t._v(" "),e("li",[e("strong",[t._v("workflow.Sleep()")]),t._v(" : This is a replacement for "),e("strong",[t._v("time.Sleep()")]),t._v(".")])]),t._v(" "),e("h3",{attrs:{id:"failing-a-workflow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#failing-a-workflow"}},[t._v("#")]),t._v(" Failing a workflow")]),t._v(" "),e("p",[t._v("To mark a "),e("Term",{attrs:{term:"workflow"}}),t._v(" as failed, all that needs to happen is for the "),e("Term",{attrs:{term:"workflow"}}),t._v(" function to return an\nerror via the "),e("strong",[t._v("err")]),t._v(" return value.")],1),t._v(" "),e("h2",{attrs:{id:"registration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#registration"}},[t._v("#")]),t._v(" Registration")]),t._v(" "),e("p",[t._v("For some client code to be able to invoke a "),e("Term",{attrs:{term:"workflow"}}),t._v(" type, the "),e("Term",{attrs:{term:"worker"}}),t._v(" process needs to be aware of\nall the implementations it has access to. A "),e("Term",{attrs:{term:"workflow"}}),t._v(" is registered with the following call:")],1),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[t._v("workflow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Register")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SimpleWorkflow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("This call essentially creates an in-memory mapping inside the "),e("Term",{attrs:{term:"worker"}}),t._v(" process between the fully\nqualified function name and the implementation. It is safe to call this registration method from\nan "),e("strong",[t._v("init()")]),t._v(" function. If the "),e("Term",{attrs:{term:"worker"}}),t._v(" receives "),e("Term",{attrs:{term:"task",show:"tasks"}}),t._v(" for a "),e("Term",{attrs:{term:"workflow"}}),t._v(" type it does not know, it will\nfail that "),e("Term",{attrs:{term:"task"}}),t._v(". However, the failure of the "),e("Term",{attrs:{term:"task"}}),t._v(" will not cause the entire "),e("Term",{attrs:{term:"workflow"}}),t._v(" to fail.")],1)])}),[],!1,null,null,null);e.default=s.exports}}]);