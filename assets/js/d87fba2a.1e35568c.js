"use strict";(self.webpackChunkcadence=self.webpackChunkcadence||[]).push([[104],{2171:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"use-cases/operational-management","title":"Operational management","description":"Imagine that you have to create a self operating database similar to Amazon RDS. Cadence is used in multiple projects","source":"@site/docs/02-use-cases/09-operational-management.md","sourceDirName":"02-use-cases","slug":"/use-cases/operational-management","permalink":"/Cadence-Docs/docs/use-cases/operational-management","draft":false,"unlisted":false,"editUrl":"https://github.com/cadence-workflow/Cadence-Docs/tree/master/docs/02-use-cases/09-operational-management.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"layout":"default","title":"Operational management","permalink":"/docs/use-cases/operational-management"},"sidebar":"docsSidebar","previous":{"title":"Deployment","permalink":"/Cadence-Docs/docs/use-cases/deployment"},"next":{"title":"Interactive application","permalink":"/Cadence-Docs/docs/use-cases/interactive"}}');var s=t(4848),o=t(8453);const r={layout:"default",title:"Operational management",permalink:"/docs/use-cases/operational-management"},i="Operational management",c={},l=[];function d(e){const a={h1:"h1",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"operational-management",children:"Operational management"})}),"\n",(0,s.jsx)(a.p,{children:"Imagine that you have to create a self operating database similar to Amazon RDS. Cadence is used in multiple projects\nthat automate managing and automatic recovery of various products like MySQL, Elasticsearch and Apache Cassandra."}),"\n",(0,s.jsx)(a.p,{children:"Such systems are usually a mixture of different use cases. They need to monitor the status of resources using polling. They have to execute orchestration API calls to administrative interfaces of a database. They have to provision new hardware or Docker instances if necessary. They need to push configuration updates and perform other actions like backups periodically."})]})}function m(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>r,x:()=>i});var n=t(6540);const s={},o=n.createContext(s);function r(e){const a=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:a},e.children)}}}]);