(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{440:function(e,t,r){"use strict";r.r(t);var a=r(13),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"event-driven-application"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#event-driven-application"}},[e._v("#")]),e._v(" Event driven application")]),e._v(" "),r("p",[e._v("Many applications listen to multiple "),r("Term",{attrs:{term:"event"}}),e._v(" sources, update the state of correspondent business entities,\nand have to execute actions if some state is reached.\nCadence is a good fit for many of these. It has direct support for asynchronous "),r("Term",{attrs:{term:"event",show:"events"}}),e._v(" (aka "),r("Term",{attrs:{term:"signal",show:"signals"}}),e._v("),\nhas a simple programming model that obscures a lot of complexity\naround state persistence, and ensures external action execution through built-in retries.")],1),e._v(" "),r("p",[e._v("Real-world examples:")]),e._v(" "),r("ul",[r("li",[e._v("Fraud detection where "),r("Term",{attrs:{term:"workflow"}}),e._v(" reacts to "),r("Term",{attrs:{term:"event",show:"events"}}),e._v(" generated by consumer behavior")],1),e._v(" "),r("li",[e._v("Customer loyalty program where the "),r("Term",{attrs:{term:"workflow"}}),e._v(" accumulates reward points and applies them when requested")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);