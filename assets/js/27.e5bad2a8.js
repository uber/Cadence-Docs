(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{334:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"install-cadence-service-locally"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-cadence-service-locally"}},[e._v("#")]),e._v(" Install Cadence Service Locally")]),e._v(" "),a("p",[e._v("To get started with Cadence, you need to set up three components successfully.")]),e._v(" "),a("ul",[a("li",[e._v("A Cadence server hosting dependencies that Cadence relis on such as Cassandra, Elastic Search, etc")]),e._v(" "),a("li",[e._v("A Cadence domain for you workflow application")]),e._v(" "),a("li",[e._v("A Cadence worker service hosting your workflows")])]),e._v(" "),a("h2",{attrs:{id:"_0-prerequisite-install-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-prerequisite-install-docker"}},[e._v("#")]),e._v(" 0. Prerequisite - Install docker")]),e._v(" "),a("p",[e._v("Follow the Docker installation instructions found here: "),a("a",{attrs:{href:"https://docs.docker.com/engine/installation/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/engine/installation/"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"_1-run-cadence-server-using-docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-run-cadence-server-using-docker-compose"}},[e._v("#")]),e._v(" 1. Run Cadence Server Using Docker Compose")]),e._v(" "),a("p",[e._v("Download the Cadence docker-compose file:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-O")]),e._v(" https://raw.githubusercontent.com/uber/cadence/master/docker/docker-compose.yml "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-O")]),e._v(" https://raw.githubusercontent.com/uber/cadence/master/docker/prometheus/prometheus.yml\n")])])]),a("p",[e._v("Then start Cadence Service by running:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker-compose")]),e._v(" up\n")])])]),a("p",[e._v("Please keep this process running at background.")]),e._v(" "),a("h2",{attrs:{id:"_2-register-a-domain-using-the-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-register-a-domain-using-the-cli"}},[e._v("#")]),e._v(" 2. Register a Domain Using the CLI")]),e._v(" "),a("p",[e._v("In a new terminal, create a new domain called "),a("code",[e._v("test-domain")]),e._v(" (or choose whatever name you like) by running:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--network")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("host "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--rm")]),e._v(" ubercadence/cli:master "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--do")]),e._v(" test-domain domain register "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-rd")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n")])])]),a("p",[e._v("Check that the domain is indeed registered:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--network")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("host "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--rm")]),e._v(" ubercadence/cli:master "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--do")]),e._v(" test-domain domain describe\nName: test-domain\nDescription:\nOwnerEmail:\nDomainData: map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\nStatus: REGISTERED\nRetentionInDays: "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\nEmitMetrics: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\nActiveClusterName: active\nClusters: active\nArchivalStatus: DISABLED\nBad binaries to reset:\n+-----------------+----------+------------+--------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" BINARY CHECKSUM "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" OPERATOR "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" START TIME "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" REASON "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n+-----------------+----------+------------+--------+\n+-----------------+----------+------------+--------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),a("p",[e._v("Please remember the domains you created because they will be used in your worker implementation and Cadence CLI  commands.")]),e._v(" "),a("h2",{attrs:{id:"what-s-next"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-s-next"}},[e._v("#")]),e._v(" What's Next")]),e._v(" "),a("p",[e._v("So far you've successfully finished two prerequisites to your Cadence application. The next steps are to implement a simple worker service that hosts your workflows and to run your very first hello world Cadence workflow.")]),e._v(" "),a("p",[e._v("Go to "),a("a",{attrs:{href:"/docs/get-started/java-hello-world"}},[e._v("Java HelloWorld")]),e._v(" or "),a("a",{attrs:{href:"/docs/get-started/golang-hello-world"}},[e._v("Golang HelloWorld")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"troubleshooting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting"}},[e._v("#")]),e._v(" Troubleshooting")]),e._v(" "),a("p",[e._v("There can be various reasons that "),a("code",[e._v("docker-compose up")]),e._v(" cannot succeed:")]),e._v(" "),a("ul",[a("li",[e._v("In case of the image being too old, update the docker image by "),a("code",[e._v("docker pull ubercadence/server:master-auto-setup")]),e._v(" and retry")]),e._v(" "),a("li",[e._v("In case of the local docker env is messed up: "),a("code",[e._v("docker system prune --all")]),e._v(" and retry (see "),a("a",{attrs:{href:"https://docs.docker.com/config/pruning/",target:"_blank",rel:"noopener noreferrer"}},[e._v("details about it"),a("OutboundLink")],1),e._v(" )")]),e._v(" "),a("li",[e._v("See logs of different container:\n"),a("ul",[a("li",[e._v("If Cassandra is not able to get up: "),a("code",[e._v("docker logs -f docker_cassandra_1")])]),e._v(" "),a("li",[e._v("If Cadence is not able to get up: "),a("code",[e._v("docker logs -f docker_cadence_1")])]),e._v(" "),a("li",[e._v("If Cadence Web is not able to get up: "),a("code",[e._v("docker logs -f docker_cadence-web_1")])])])])]),e._v(" "),a("p",[e._v("If the above is still not working, "),a("a",{attrs:{href:"https://github.com/uber/cadence/issues/new/choose",target:"_blank",rel:"noopener noreferrer"}},[e._v("open an issue in Server(main) repo"),a("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);a.default=r.exports}}]);