(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{484:function(t,e,a){"use strict";a.r(e);var s=a(13),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"executing-activities"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#executing-activities"}},[t._v("#")]),t._v(" Executing activities")]),t._v(" "),a("p",[t._v("The primary responsibility of a "),a("Term",{attrs:{term:"workflow"}}),t._v(" implementation is to schedule "),a("Term",{attrs:{term:"activity",show:"activities"}}),t._v(" for execution. The\nmost straightforward way to do this is via the library method "),a("code",[t._v("workflow.ExecuteActivity")]),t._v(". The following\nsample code demonstrates making this call:")],1),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("ao "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" cadence"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ActivityOptions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    TaskList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sampleTaskList"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ScheduleToCloseTimeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ScheduleToStartTimeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    StartToCloseTimeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    HeartbeatTimeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    WaitForCancellation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nctx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cadence"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("WithActivityOptions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nfuture "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" workflow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ExecuteActivity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SimpleActivity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" future"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" err\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Let's take a look at each component of this call.")]),t._v(" "),a("h2",{attrs:{id:"activity-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#activity-options"}},[t._v("#")]),t._v(" Activity options")]),t._v(" "),a("p",[t._v("Before calling "),a("code",[t._v("workflow.ExecuteActivity()")]),t._v(", you must configure "),a("code",[t._v("ActivityOptions")]),t._v(" for the\ninvocation. These options customize various execution timeouts, and are passed in by creating a child\ncontext from the initial context and overwriting the desired values. The child context is then passed\ninto the "),a("code",[t._v("workflow.ExecuteActivity()")]),t._v(" call. If multiple "),a("Term",{attrs:{term:"activity",show:"activities"}}),t._v(" are sharing the same option\nvalues, then the same context instance can be used when calling "),a("code",[t._v("workflow.ExecuteActivity()")]),t._v(".")],1),t._v(" "),a("h2",{attrs:{id:"activity-timeouts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#activity-timeouts"}},[t._v("#")]),t._v(" Activity timeouts")]),t._v(" "),a("p",[t._v("There can be various kinds of timeouts associated with an "),a("Term",{attrs:{term:"activity"}}),t._v(". Cadence guarantees that "),a("Term",{attrs:{term:"activity",show:"activities"}}),t._v("\nare executed "),a("em",[t._v("at most once")]),t._v(", so an "),a("Term",{attrs:{term:"activity"}}),t._v(" either succeeds or fails with one of the following timeouts:")],1),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Timeout")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("StartToCloseTimeout")])]),t._v(" "),a("td",[t._v("Maximum time that a worker can take to process a task after it has received the task.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ScheduleToStartTimeout")])]),t._v(" "),a("td",[t._v("Time a task can wait to be picked up by an "),a("Term",{attrs:{term:"activity_worker"}}),t._v(" after a "),a("Term",{attrs:{term:"workflow"}}),t._v(" schedules it. If there are no workers available to process this task for the specified duration, the task will time out.")],1)]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ScheduleToCloseTimeout")])]),t._v(" "),a("td",[t._v("Time a task can take to complete after it is scheduled by a "),a("Term",{attrs:{term:"workflow"}}),t._v(". This is usually greater than the sum of "),a("code",[t._v("StartToClose")]),t._v(" and "),a("code",[t._v("ScheduleToStart")]),t._v(" timeouts.")],1)]),t._v(" "),a("tr",[a("td",[a("code",[t._v("HeartbeatTimeout")])]),t._v(" "),a("td",[t._v("If a task doesn't heartbeat to the Cadence service for this duration, it will be considered to have failed. This is useful for long-running tasks.")])])])]),t._v(" "),a("h2",{attrs:{id:"executeactivity-call"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#executeactivity-call"}},[t._v("#")]),t._v(" ExecuteActivity call")]),t._v(" "),a("p",[t._v("The first parameter in the call is the required "),a("code",[t._v("cadence.Context")]),t._v(" object. This type is a copy of\n"),a("code",[t._v("context.Context")]),t._v(" with the "),a("code",[t._v("Done()")]),t._v(" method returning "),a("code",[t._v("cadence.Channel")]),t._v(" instead of the native Go "),a("code",[t._v("chan")]),t._v(".")]),t._v(" "),a("p",[t._v("The second parameter is the function that we registered as an "),a("Term",{attrs:{term:"activity"}}),t._v(" function. This parameter can\nalso be a string representing the fully qualified name of the "),a("Term",{attrs:{term:"activity"}}),t._v(" function. The benefit of passing\nin the actual function object is that the framework can validate "),a("Term",{attrs:{term:"activity"}}),t._v(" parameters.")],1),t._v(" "),a("p",[t._v("The remaining parameters are passed to the "),a("Term",{attrs:{term:"activity"}}),t._v(" as part of the call. In our example, we have a\nsingle parameter: "),a("code",[t._v("value")]),t._v(". This list of parameters must match the list of parameters declared by\nthe "),a("Term",{attrs:{term:"activity"}}),t._v(" function. The Cadence client library will validate this.")],1),t._v(" "),a("p",[t._v("The method call returns immediately and returns a "),a("code",[t._v("cadence.Future")]),t._v(". This allows you to execute more\ncode without having to wait for the scheduled "),a("Term",{attrs:{term:"activity"}}),t._v(" to complete.")],1),t._v(" "),a("p",[t._v("When you are ready to process the results of the "),a("Term",{attrs:{term:"activity"}}),t._v(", call the "),a("code",[t._v("Get()")]),t._v(" method on the future\nobject returned. The parameters to this method are the "),a("code",[t._v("ctx")]),t._v(" object we passed to the\n"),a("code",[t._v("workflow.ExecuteActivity()")]),t._v(" call and an output parameter that will receive the output of the\n"),a("Term",{attrs:{term:"activity"}}),t._v(". The type of the output parameter must match the type of the return value declared by the\n"),a("Term",{attrs:{term:"activity"}}),t._v(" function. The "),a("code",[t._v("Get()")]),t._v(" method will block until the "),a("Term",{attrs:{term:"activity"}}),t._v(" completes and results are\navailable.")],1),t._v(" "),a("p",[t._v("You can retrieve the result value returned by "),a("code",[t._v("workflow.ExecuteActivity()")]),t._v(" from the future and use\nit like any normal result from a synchronous function call. The following sample code demonstrates how\nyou can use the result if it is a string value:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" future"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" err\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do something.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"banana"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do something.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" err\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("In this example, we called the "),a("code",[t._v("Get()")]),t._v(" method on the returned future immediately after "),a("code",[t._v("workflow.ExecuteActivity()")]),t._v(".\nHowever, this is not necessary. If you want to execute multiple "),a("Term",{attrs:{term:"activity",show:"activities"}}),t._v(" in parallel, you can\nrepeatedly call "),a("code",[t._v("workflow.ExecuteActivity()")]),t._v(", store the returned futures, and then wait for all\n"),a("Term",{attrs:{term:"activity",show:"activities"}}),t._v(" to complete by calling the "),a("code",[t._v("Get()")]),t._v(" methods of the future at a later time.")],1),t._v(" "),a("p",[t._v("To implement more complex wait conditions on returned future objects, use the "),a("code",[t._v("cadence.Selector")]),t._v(" class.")])])}),[],!1,null,null,null);e.default=n.exports}}]);