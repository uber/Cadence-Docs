"use strict";(self.webpackChunkcadence=self.webpackChunkcadence||[]).push([[3718],{9118:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});var t=n(9426),o=n(4848),a=n(8453);const r={title:"Cadence non-derministic errors common question Q&A (part 1)",date:new Date("2024-03-10T00:00:00.000Z"),authors:"chopincode",tags:["deep-dive"]},c=void 0,s={authorsImageUrls:[void 0]},l=[{value:"If I change code logic inside an Cadence activity (for example, my activity is calling database A but now I want it to call database B),  will it trigger an non-deterministic error?",id:"if-i-change-code-logic-inside-an-cadence-activity-for-example-my-activity-is-calling-database-a-but-now-i-want-it-to-call-database-b--will-it-trigger-an-non-deterministic-error",level:3},{value:"Does changing the workflow definition trigger non-determinstic errors?",id:"does-changing-the-workflow-definition-trigger-non-determinstic-errors",level:3}];function d(e){const i={h3:"h3",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.h3,{id:"if-i-change-code-logic-inside-an-cadence-activity-for-example-my-activity-is-calling-database-a-but-now-i-want-it-to-call-database-b--will-it-trigger-an-non-deterministic-error",children:"If I change code logic inside an Cadence activity (for example, my activity is calling database A but now I want it to call database B),  will it trigger an non-deterministic error?"}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)("b",{children:"NO"}),". This change will not trigger non-deterministic error."]}),"\n",(0,o.jsx)(i.p,{children:"An Activity is the smallest unit of execution for Cadence and what happens inside activities are not recorded as historical events and therefore will not be replayed. In short, this change is deterministic and it is fine to modify logic inside activities."}),"\n",(0,o.jsx)(i.h3,{id:"does-changing-the-workflow-definition-trigger-non-determinstic-errors",children:"Does changing the workflow definition trigger non-determinstic errors?"}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)("b",{children:"YES"}),". This is a very typical non-deterministic error."]}),"\n",(0,o.jsx)(i.p,{children:"When a new workflow code change is deployed, Cadence will find if it is compatible with\nCadence history. Changes to workflow definition will fail the replay process of Cadence\nas it finds the new workflow definition imcompatible with previous historical events."}),"\n",(0,o.jsx)(i.p,{children:"Here is a list of common workflow definition changes."}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:"Changing workflow parameter counts"}),"\n",(0,o.jsx)(i.li,{children:"Changing workflow parameter types"}),"\n",(0,o.jsx)(i.li,{children:"Changing workflow return types"}),"\n"]}),"\n",(0,o.jsx)(i.p,{children:"The following changes are not categorized as definition changes and therefore will not\ntrigger non-deterministic errors."}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:"Changes of workflow return values"}),"\n",(0,o.jsx)(i.li,{children:"Changing workflow parameter names as they are just positional"}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>c});var t=n(6540);const o={},a=t.createContext(o);function r(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:i},e.children)}},9426:e=>{e.exports=JSON.parse('{"permalink":"/blog/2024/02/15/cadence-non-deterministic-common-qa","editUrl":"https://github.com/cadence-workflow/Cadence-Docs/tree/master/blog/2024-02-15-cadence-non-deterministic-common-qa.md","source":"@site/blog/2024-02-15-cadence-non-deterministic-common-qa.md","title":"Cadence non-derministic errors common question Q&A (part 1)","description":"If I change code logic inside an Cadence activity (for example, my activity is calling database A but now I want it to call database B),  will it trigger an non-deterministic error?","date":"2024-03-10T00:00:00.000Z","tags":[{"inline":false,"label":"Deep Dives","permalink":"/blog/tags/deep-dives","description":"Deep Dives tag description"}],"readingTime":2.625,"hasTruncateMarker":true,"authors":[{"name":"Chris Qin","title":"Applications Developer @ Uber","url":"https://www.linkedin.com/in/chrisqin0610/","page":{"permalink":"/blog/authors/chopincode"},"socials":{"linkedin":"https://www.linkedin.com/in/chrisqin0610/","github":"https://github.com/chopincode"},"imageURL":"https://github.com/chopincode.png","key":"chopincode"}],"frontMatter":{"title":"Cadence non-derministic errors common question Q&A (part 1)","date":"2024-03-10T00:00:00.000Z","authors":"chopincode","tags":["deep-dive"]},"unlisted":false,"prevItem":{"title":"2024 Cadence Yearly Roadmap Update","permalink":"/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update"},"nextItem":{"title":"Cadence Community Spotlight Update - November 2023","permalink":"/blog/2023/11/30/community-spotlight-update-november-2023"}}')}}]);