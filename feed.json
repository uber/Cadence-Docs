{
    "version": "https://jsonfeed.org/version/1",
    "title": "",
    "home_page_url": "/",
    "feed_url": "/feed.json",
    "items": [
        {
            "id": "/blog/2024/03/10/cadence-non-deterministic-common-qa/",
            "url": "/blog/2024/03/10/cadence-non-deterministic-common-qa/",
            "title": "Cadence non-derministic errors common question Q&A (part 1)",
            "summary": "NO. This change will not trigger non-deterministic error.\n\nAn Activity is the smallest unit of execution for Cadence and what happens inside activities are not recorded as historical events and therefore will not be replayed. In short, this change is deterministic and it is fine to modify logic inside activities.\n\nDoes changing the workflow definition trigger non-determinstic errors?\n\nYES. This is a very typical non-deterministic error.\n\nWhen a new workflow code change is deployed, Cadence will find if it is compatible with\nCadence history. Changes to workflow definition will fail the replay process of Cadence\nas it finds the new workflow definition imcompatible with previous historical events.\n\nHere is a list of common workflow definition changes.\nChanging workflow parameter counts\nChanging workflow parameter types\nChanging workflow return types\n\nThe following changes are not categorized as definition changes and therefore will not\ntrigger non-deterministic e ...",
            "date_modified": "2024-03-10T00:00:00.000Z"
        },
        {
            "id": "/blog/2023/11/30/community-spotlight-update-november-2023/",
            "url": "/blog/2023/11/30/community-spotlight-update-november-2023/",
            "title": "Cadence Community Spotlight Update - November 2023",
            "summary": "Welcome to the latest of our regular monthly Community Spotlight updates that gives you news from in and around the Cadence community!\n\nIt's been a couple of months since our last update so we have a lot of updates to share with you.\n\nPlease see below for a roundup of the highlights:\n\nProposal for Cadence Native Authentication\n\nCommunity member Mantas Sidlauskas has drafted a proposal around Cadence native authentication and is asking for community feedback. If you are interested in reviewing the current proposal and providing comments or feedback then please find the proposal details at the link below:\n\nCadence Native Authentication Proposal\n\n This is a great example of how we can focus on collaborating together to find a collective solution. A big thank you to Mantas for initiating this work and we hope to see the result ...",
            "date_modified": "2023-11-30T00:00:00.000Z"
        },
        {
            "id": "/blog/2023/08/31/community-spotlight-august-2023/",
            "url": "/blog/2023/08/31/community-spotlight-august-2023/",
            "title": "Cadence Community Spotlight Update - August 2023",
            "summary": "Welcome to the latest of our regular monthly Community Spotlight updates that gives you news from in and around the Cadence community!\n\nPlease see below for a roundup of the highlights:\n\nMore Cadence How To's\n\nYou might have noticed that we have had a few more contributions to our blog from Chris Qin. Chris has been busy sharing insights, and tips on a few important Cadence topics. The objective is to help the community with any potential problems.\n\nHere are the latest topics:\n\nBad Practices and Anti-Patterns with Cadence - Part 1\n\nNon-Determistic Errors, Replayers and Shadowers\n\nEven if you have not encountered these use cases - it is good to be prepared and have a solution ready.Please take a look and let us have your feedback.\n\nChris is also going to take a look at ...",
            "date_modified": "2023-08-31T00:00:00.000Z"
        },
        {
            "id": "/blog/2023/08/27/nondeterministic-errors-replayers-shadowers/",
            "url": "/blog/2023/08/27/nondeterministic-errors-replayers-shadowers/",
            "title": "Non-deterministic errors, replayers and shadowers",
            "summary": "It is conceivable that developers constantly update their Cadence workflow code based upon new business use cases and needs. However,\nthe definition of a Cadence workflow must be deterministic because behind the scenes cadence uses event sourcing to construct\nthe workflow state by replaying the historical events stored for this specific workflow. Introducing components that are not compatible\nwith an existing running workflow will yield to non-deterministic errors and sometimes developers find it tricky to debug. Consider the\nfollowing workflow that executes two activities.\n\nfunc SampleWorkflow(ctx workflow.Context, data string) (string, error) {\n    ao := workflow.ActivityOptions{\n        ScheduleToStartTimeout: time.Minute,\n        StartToCloseTimeout:    time.Minute,\n    }\n    ctx = workflow.WithActivityOptions(ctx, ao)\n    var result1 string\n    err := workflow.ExecuteActivity(ctx, ActivityA, data).Get(ctx, &result1)\n    if err != nil {\n        return \"\", err\n    }\n    v ...",
            "date_modified": "2023-08-27T00:00:00.000Z"
        },
        {
            "id": "/blog/2023/07/31/community-spotlight-july-2023/",
            "url": "/blog/2023/07/31/community-spotlight-july-2023/",
            "title": "Cadence Community Spotlight Update - July 2023",
            "summary": "Welcome to the latest of our regular monthly Community Spotlight updates that gives you news from in and around the Cadence community!\n\nPlease see below for a roundup of the highlights:\n\nGetting Started with Cadence\n\nAre you new to  Cadence and want to understand the basic concepts and architecture? Well we have some great information for you!\n\nCommunity member Chris Qin has written a short blog post that takes you through the the three main components that make up a Cadence application. Please take a look and feel free to give us your comments and feedback.\n\nThanks Chris for sharing your knowledge and helping others to get started.\n\nCadence Go Client v1.0 Released\n\nThis month saw the release of v1.0 of the Cadence Go Client. Note that the work done on this release was as a result ...",
            "date_modified": "2023-07-31T00:00:00.000Z"
        }
    ]
}