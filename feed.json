{
    "version": "https://jsonfeed.org/version/1",
    "title": "",
    "home_page_url": "/",
    "feed_url": "/feed.json",
    "items": [
        {
            "id": "/blog/2024/10/14/zonal-isolation-v1/",
            "url": "/blog/2024/10/14/zonal-isolation-v1/",
            "title": "Zonal Isolation for Cadence Workflows",
            "summary": "At Uber, we want to achieve regional resilience such that losing a zone within a region can be tolerated without requiring a cross-region failover. We also want to make sure that losing a zone only affects a subset of workload, at most, rather than everything. However, in Cadence-based systems, the workload in a region is distributed randomly across all workers in the region at a “task-level granularity”, which means a workflow may be worked on by any worker in the region where the domain is active. To achieve this goal, we introduced Zonal Isolation for Cadence Workflows - a feature designed to pin workflows to the zone they are started in, so that zonal isolation can be achieved at a workflow-level.\n\nWhat is Zonal Isolation for Cadence Workflows?\nAt high-level, Zonal Isolation for Cadence Workflows can be thought in 2 levels:\n\nTask-level isolation: All decision tasks and activity tasks of a workflow are only processed by workers from the zone where the workflow was started\n ...",
            "image": "/img/zone-isolation.png",
            "date_modified": "2024-10-14T00:00:00.000Z"
        },
        {
            "id": "/blog/2024/10/01/announcing-cadence-helm-charts-v0/",
            "url": "/blog/2024/10/01/announcing-cadence-helm-charts-v0/",
            "title": "Announcement: Cadence Helm Charts v0 Release",
            "summary": "We’ve heard your feedback: deploying Cadence has been a challenge, especially with limited documentation on operational aspects. So far, we’ve only provided a few docker compose files to help you get started on a development machine. However, deploying and managing Cadence at scale requires a deep understanding of underlying services, configurations and their dependencies.\n\nTo address these challenges, we’re launching several initiatives to make it easier to deploy and operate Cadence clusters. These include deployment specs for common scenarios, monitoring dashboards, alerts, runbooks, and more comprehensive documentation.\n\nIntroducing Cadence Kubernetes Helm Chart v0\n\nToday, we are happy to announce the release of Cadence Kubernetes Helm Chart v0. This will be the starting point for standardizing Cadence deployments on Kubernetes. We chose Kubernetes because it's the leading compute pla ...",
            "date_modified": "2024-10-01T00:00:00.000Z"
        },
        {
            "id": "/blog/2024/09/05/workflow-specific-rate-limits/",
            "url": "/blog/2024/09/05/workflow-specific-rate-limits/",
            "title": "Minimizing blast radius in Cadence: Introducing Workflow ID-based Rate Limits",
            "summary": "At Uber, we run several big multitenant Cadence clusters with hundreds of domains in each. The clusters being multi-tenant means potential noisy neighbor effects between domains.\n\nAn essential aspect of avoiding this is managing how workflows interact with our infrastructure to prevent any single workflow from causing instability for the whole cluster. To this end, we are excited to introduce Workflow ID-based rate limits — a new feature designed to protect our clusters from problematic workflows and ensure stability across the board.\n\nWhy Workflow ID-based Rate Limits?\nWe already have rate limits for how many requests can be sent to a domain. However, since Cadence is sharded on the workflow ID, a user-provided input, an overused workflow with a particular id might overwhelm a shard by making too many requests. There are two main ways this happens:\n\nA user starts, or signals the ...",
            "date_modified": "2024-09-05T00:00:00.000Z"
        },
        {
            "id": "/blog/2024/07/11/yearly-roadmap-update/",
            "url": "/blog/2024/07/11/yearly-roadmap-update/",
            "title": "2024 Cadence Yearly Roadmap Update",
            "summary": "If you haven’t heard about Cadence, this section is for you. In a short description, Cadence is a code-driven workflow orchestration engine. The definition itself may not tell enough, so it would help splitting it into three parts:\n\nWhat’s a workflow? (everyone has a different definition)\nWhy does it matter to be code-driven?\nBenefits of Cadence\n\nWhat is a Workflow?\n\nworkflow.png\n\nIn the simplest definition, it is “a multi-step execution”. Step here represents individual operations that are a little heavier than small in-process function calls. Although they are not limited to those: it could be a separate service call, processing a large dataset, map-reduce, thread sleep, scheduling next run, waiting for an external input, starting a sub workflow etc. It’s anything a user thinks as a single unit of logic in their code. Those steps often have dependencies among themselves. Some steps, including the very first step, might ...",
            "image": "/../../shared/img/2024-yearly-update/workflow.png",
            "date_modified": "2024-07-11T00:00:00.000Z"
        },
        {
            "id": "/blog/2024/03/10/cadence-non-deterministic-common-qa/",
            "url": "/blog/2024/03/10/cadence-non-deterministic-common-qa/",
            "title": "Cadence non-derministic errors common question Q&A (part 1)",
            "summary": "NO. This change will not trigger non-deterministic error.\n\nAn Activity is the smallest unit of execution for Cadence and what happens inside activities are not recorded as historical events and therefore will not be replayed. In short, this change is deterministic and it is fine to modify logic inside activities.\n\nDoes changing the workflow definition trigger non-determinstic errors?\n\nYES. This is a very typical non-deterministic error.\n\nWhen a new workflow code change is deployed, Cadence will find if it is compatible with\nCadence history. Changes to workflow definition will fail the replay process of Cadence\nas it finds the new workflow definition imcompatible with previous historical events.\n\nHere is a list of common workflow definition changes.\nChanging workflow parameter counts\nChanging workflow parameter types\nChanging workflow return types\n\nThe following changes are not categorized as definition changes and therefore will not\ntrigger non-deterministic e ...",
            "date_modified": "2024-03-10T00:00:00.000Z"
        }
    ]
}